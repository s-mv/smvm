name: release

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Make
        if: matrix.os == 'windows-latest'
        run: choco install make

      - name: Run Makefile
        run: make

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: build-${{ matrix.os }}
          path: path/to/your/built/artifact

  get-version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get_version.outputs.version }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get version from file
        id: get_version
        run: |
          if [ -f version.txt ]; then
            echo "version=$(cat version.txt)" >> $GITHUB_OUTPUT
          else
            echo "Error: version.txt not found"
            exit 1
          fi

  release:
    needs: [build, get-version]
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download artifacts
      uses: actions/download-artifact@v3

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ needs.get-version.outputs.version }}
        release_name: Release ${{ needs.get-version.outputs.version }}
        draft: false
        prerelease: false

    - name: Upload Release Assets
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./build-ubuntu-latest/your_artifact_name
        asset_name: your_artifact_name_linux
        asset_content_type: application/octet-stream

    - name: Upload Release Assets (Windows)
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./build-windows-latest/your_artifact_name
        asset_name: your_artifact_name_windows
        asset_content_type: application/octet-stream